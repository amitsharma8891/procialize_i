<?php

class User extends CI_Controller {

    /**
     * Index Class
     *
     * @package	Procialize 
     * @subpackage	User controller
     * @author		Amit  sharma
     * @copyright	Copyright (c) 2014 - 2015 
     * @since		Version 1.0
     */
    function __construct() {
        parent::__construct();
        $this->load->model('client/client_login_model','model');
        $this->load->model('client/client_notification_model');
        
    }

    function profile_view()
    {
        $user_id                                                                = $this->session->userdata('client_user_id');                           
        $attendee_id                                                            = $this->session->userdata('client_attendee_id'); 
        
        $data                                                                   = array();
        if($attendee_id)
        $data['user_data']                                                      = $this->model->getUserData($attendee_id);
        
        $data['industry_list']                                                  = $this->model->getIndustry(NULL,NULL);
        $data['functionality_list']                                             = $this->model->getFunctionality(NULL,NULL);
        $this->load->view(CLIENT_USER_PROFILE_VIEW,$data);
    }
    
    function login_view()
    {
        if($this->session->userdata('client_user_id'))
            redirect(SITE_URL.'events');
        if(get_cookie('email') && get_cookie('password'))
        {
            $check_login    = $this->login(get_cookie('email'),get_cookie('password'));
            if($check_login['error'] == 'success')
                redirect(SITE_URL.'events');
            
        }
        $data                                                                   = array();
        $this->load->view(CLIENT_LOGIN_VIEW,$data);
    }
    
    function save_user()
    {
        $this->load->helper(array('form', 'url'));
	$this->load->library('form_validation');
        $user_id                                                                = $this->session->userdata('client_user_id');                           
        $attendee_id                                                            = $this->session->userdata('client_attendee_id');
        
        $json_array['error']                                                    = 'error';
        $json_array['msg']                                                      = 'Something Went Worng!';
        
        
        if(!$attendee_id)
        {
            $this->form_validation->set_rules('email', 'Email ID', 'trim|required|valid_email|is_unique[user.email]');
            $this->form_validation->set_rules('password', 'Password', 'trim|required|matches[conf_password]');
            $this->form_validation->set_rules('conf_password', 'Confirm Password', 'trim|required');
        }
        
        if($attendee_id && $this->input->post('current_password') != '')
        {
            $this->form_validation->set_rules('current_password', 'Current Password', 'trim|required');
            $this->form_validation->set_rules('password', 'Password', 'trim|required');
            $this->form_validation->set_rules('conf_password', 'Confirm Password', 'trim|required|matches[password]');
        }
        
        $this->form_validation->set_rules('first_name', 'First Name', 'trim|required');
        $this->form_validation->set_rules('last_name', 'Last Name', 'trim|required');
        $this->form_validation->set_rules('designation', 'Designation', 'trim|required');
        $this->form_validation->set_rules('company', 'Company Name', 'trim|required');
        $this->form_validation->set_rules('industry_id[]', 'Industry', 'trim|required');
        $this->form_validation->set_rules('functionality_id[]', 'Functionality', 'trim|required');
        $this->form_validation->set_rules('city', 'City', 'trim|required');
        $this->form_validation->set_rules('mobile', 'Mobile', 'trim|callback_mobileno_check');
        $this->form_validation->set_rules('phone', 'Phone', 'trim|callback_mobileno_check');
        
        if ($this->form_validation->run() == FALSE)
        {
            $json_array['email_err']                                            = form_error('email');
            $json_array['current_password_err']                                 = form_error('current_password');
            $json_array['password_err']                                         = form_error('password');
            $json_array['conf_password_err']                                    = form_error('conf_password');
            $json_array['first_name_err']                                       = form_error('first_name');
            $json_array['last_name_err']                                        = form_error('last_name');
            $json_array['designation_err']                                      = form_error('designation');
            $json_array['company_err']                                          = form_error('company');
            $json_array['industry_id_err']                                      = form_error('industry_id[]');
            $json_array['functionality_id_err']                                 = form_error('functionality_id[]');
            $json_array['city_err']                                             = form_error('city');
            $json_array['mobile_err']                                           = form_error('mobile');
            $json_array['phone_err']                                            = form_error('phone');
        }
        else
        {
            $data                                                               = $this->input->post(NULL, TRUE);
            
            if($attendee_id && $this->input->post('current_password') != '')
            {
                $db_password                                                    = $this->model->getPassword($attendee_id);
                if($db_password != md5($this->input->post('current_password')))
                {
                    $json_array['error']                                        = 'error';
                    $json_array['current_password_err']                         = 'Invalid Current password.';
                    echo json_encode($json_array);
                    return;
                }
            }
            
            
            $data['social_type']                                                = 'normal';
            $this->model->insert_type                                           = 'normal';    
            $data['location']                                                   = '';    
            $data['linkdin']                                                    = '';    
            $data['linkedin_id']                                                = '';    
            //$data['profile_pic']                                                = '';    
            $data['public_profile_url']                                         = '';    
            
            $this->model->attendee_id                                           = $attendee_id;
            $save_user                                                          = $this->model->save_user($user_id,$data); 
            $seesion_data                                                       = array(
                                                                                        'client_user_id'            => $save_user['user_id'],
                                                                                        'client_attendee_id'        => $save_user['attendee_id'],
                                                                                        'client_email'              => $save_user['email'],
                                                                                        'client_user_type'          => $data['type_of_attendee'],
                                                                                        'client_first_name'         => $data['first_name'],
                                                                                        'client_user_name'          => $data['first_name'].' '.$data['last_name'],
                                                                                        'client_user_company'       => $data['company'],
                                                                                        'client_user_designation'   => $data['designation'],
                                                                                        'client_user_image'         => @$data['profile_pic'],
                                                                                        'client_user_city'          => $data['city'],
                                                                                        'client_user_industry'      => $data['industry_id'],
                                                                                        );
            $this->session->set_userdata($seesion_data);
            $json_array['error']                                                = 'success';
            $json_array['msg']                                                  = 'Profile Saved Successfully';
        }
        
        echo json_encode($json_array);
    }
    
    function mobileno_check($no)
    {
        if($no)
        {
            if(!preg_match("/^[0-9 -+]+$/", $no) && !is_numeric($no))
            {

                $this->form_validation->set_message('mobileno_check', 'Invalid Mobile No!');
                return FALSE;
            }
            else
                return TRUE;
        }
        else
            return TRUE;
        
        
    }
    
    function login($cookie_email = NULL,$cookie_password = NULL)
    {
        if($cookie_email && $cookie_password)
        {
            $email                                                              = $cookie_email;
            $password                                                           = $cookie_password;
        }
        else
        {
            $email                                                                  = mysql_real_escape_string($this->input->post('email',TRUE));
            $password                                                               = mysql_real_escape_string($this->input->post('password',TRUE));
        }
        $remember_me                                                               = $this->input->post('remember_me',TRUE);
        
        $json_array['error']                                                    = 'error'; 
        $json_array['msg']                                                      = 'Invalid Email/Password';
        if(!isset($email) || $email == '' || $password == ''  || !isset($password))
        {
            echo json_encode($json_array);exit;
        }
         
        $this->model->password                                                  = $password;
        $user_data                                                              = $this->model->check_user(NULL,$email);
        if($user_data)
        {
            //display($user_data);
            if($user_data['status'] == 1)
            {
                
                $seesion_data                                                   = array(
                                                                                        'client_user_id'            => $user_data['id'],
                                                                                        'client_attendee_id'        => $user_data['attendee_id'],
                                                                                        'client_email'              => $user_data['email'],
                                                                                        'client_user_type'          => $user_data['attendee_type'],
                                                                                        'client_first_name'         => $user_data['first_name'],
                                                                                        'client_user_name'          => $user_data['name'],
                                                                                        'client_user_company'       => $user_data['company_name'],
                                                                                        'client_user_designation'   => $user_data['designation'],
                                                                                        'client_user_image'         => $user_data['photo'],
                                                                                        'client_user_city'          => $user_data['city'],
                                                                                        'client_user_industry'      => $user_data['attendee_industry'],
                                                                                        );
                $this->session->set_userdata($seesion_data);
                $json_array['redirect']                                         = SITE_URL.'events';
                if($this->session->userdata('event_reffaral'))
                {
                    $json_array['redirect']                                     = $this->session->userdata('event_reffaral');
                }
                
                if($remember_me)
                {
                    $cookie                             = array(
                                                                    'name'               => 'email',
                                                                    'value'  		 => $email,
                                                                    'expire' 		 => '865000'
                                                                );

                    set_cookie($cookie);

                    $cookie                             = array(
                                                                'name'   		=> 'password',
                                                                'value'  		=> $password,
                                                                'expire' 		=> '865000'
                                                                );
                    set_cookie($cookie);
                }
                $json_array['error']                                            = 'success';
                $json_array['msg']                                              = 'success';
                
            }
            else
            {
                $json_array['error']                                            = 'error';
                $json_array['msg']                                              = 'User has been Blocked!';
            }
        }
        if($cookie_email && $cookie_password)
        {
            return $json_array;
        }
        echo json_encode($json_array);
    }
    
    
    function saved_profile()
    {
        $attebdee_id                                                            = $this->session->userdata('client_attendee_id');
        if(!$attebdee_id)
            redirect(SITE_URL.'events');
        
        $user_type_array                                                        = array('attendee','exhibitor','speaker');
        $user_type                                                              = $this->uri->segment(3);
        $event_id                                                               = $this->session->userdata('client_event_id');
        $attendee_type                                                          = '';    
        if(in_array($user_type, $user_type_array))
        {
            if($user_type == 'attendee')
                $attendee_type                                                  = 'A'; 
            elseif($user_type == 'exhibitor')
                $attendee_type                                                  = 'E'; 
            elseif($user_type == 'speaker')
                $attendee_type                                                  = 'S'; 
            $this->client_notification_model->attendee_type                     = $attendee_type;
            $data['page_type']                                                  = $user_type;
            
            $data['saved_profile']                                              = $this->client_notification_model->getSocialMessage($attebdee_id,$event_id);
            $this->load->view(CLIENT_USER_SAVED_PROFILE_VIEW,$data);
            //display($data);
        }
        else
        {
            echo '404';
        }
    }
    
    function verify_change_password()
    {
        $this->load->helper('emailer_helper');
        $this->load->model('client/client_event_model');
        $email_placehoder                                                       = array('first_name','password_link');    
        $email                                                                  = $this->input->post('email');
        $json_array['error']                                                    = 'error';
        $json_array['msg']                                                      = 'Invalid Email Address!';
        if($email)
        {
            $check_user                                                         = $this->client_event_model->getUser($email);
            if($check_user)
            {
                $user_data                                                      = $check_user[0];
                //display($user_data);
                $password_key                                                   = md5($user_data['user_id']);
                
                $this->db->where('id',$user_data['user_id']);
                $this->db->update('user',array('password_key'=>$password_key));
                
                $to                                                             = $email;
                $subject                                                        = 'Change password for your Procialize App';
                $password_link                                                           = '<a href="'.SITE_URL.'user/change-password/'.$password_key.'">Click</a>';
                
                $html                                                           = str_replace('{first_name}',$user_data['first_name'],forget_password_temp());
                $html                                                           = str_replace('{password_link}',$password_link,$html);
                $html                                                           = str_replace('{IMAGE_PATH}',CLIENT_IMAGES,$html);
                
                
                header('content-type: text/html; charset=UTF-8');
                sendMail($to, $subject, '',$html);
                $json_array['error']                                            = 'success';
                $json_array['msg']                                              = 'Password Reset Link has been sent to your email adderess';
            }
        }
        
        echo json_encode($json_array);
    }
    
    function change_password_view()
    {
        $password_key                                                           = $this->uri->segment(3);
        if($password_key)
        {
            $check_password_key                                                  = $this->model->CheckPasswordKey($password_key);
            //display($check_password_key);
            if(!$check_password_key)
            {
                $data['error_message']                                          = 'Invalid Password key';
                $this->load->view(CLIENT_DATA_ERROR_VIEW,$data);
                return;
            }
            $data['password_key']                                               = $password_key;
            $this->load->view(CLIENT_USER_RESET_PASSWORD_VIEW,$data);
        }
        else
        {
            $data['error_message']                                              = 'Invalid Password key';
            $this->load->view(CLIENT_DATA_ERROR_VIEW,$data);
        }
    }
    
    function change_password()
    {
        $this->form_validation->set_rules('password', 'Password', 'trim|required');
        $this->form_validation->set_rules('conf_password', 'Confirm Password', 'trim|required|matches[password]');
        

        if ($this->form_validation->run() == FALSE)
        {
            $json_array['error']                                                = 'error';    
            $json_array['msg']                                                  = 'Something went wrong';    
            $json_array['password_err']                                         = form_error('password');
            $json_array['conf_password_err']                                    = form_error('conf_password');
        }
        else
        {
               
            $data                                                               = $this->input->post(NULL,NULL);
            //display($data);
            $update_password                                                    = $this->model->reset_password($data);
            
            $json_array['error']                                                = 'success';    
            $json_array['msg']                                                  = 'Password updated successfully!';  
        }
        
        echo json_encode($json_array);
    }
    
    
    
    
    
  

}